{"version":3,"sources":["App.jsx","index.js"],"names":["API_URL","App","useEffect","fetch","then","response","json","data","setServRes","useState","DashboardName","setDashboardName","ItemValue","setItemValue","servRes","Alert","setAlert","nowDate","Date","currBoard","setCurrBoard","currItem","setCurrItem","className","onSubmit","e","preventDefault","target","reset","curItem","findIndex","el","title","method","headers","body","JSON","stringify","hendlerSubmit","htmlFor","id","placeholder","required","autoComplete","type","name","onChange","Math","random","value","onClick","length","map","board","i","itemSubmit","moment","_d","results","item","onDragOver","style","boxShadow","DragOver","onDragLeave","DragLeave","onDragStart","DragStart","onDragEnd","DragEnd","onDrop","currIndex","indexOf","splice","dropIdex","b","Drop","draggable","subTitle","postDate","from","delateSub","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6915120.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\n// import Items from './items';\nimport './style.css';\nimport moment from 'moment';\n\n\nconst API_URL = 'https://morning-anchorage-87811.herokuapp.com'\n\nfunction App() {\n\n  useEffect( () => {\n    fetch(`${API_URL}/api`)\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      setServRes( data ); \n    })\n  }, [])\n\n  const [DashboardName, setDashboardName] = useState([])\n  const [ItemValue, setItemValue] = useState('')\n\n  const [servRes, setServRes] = useState([])\n\n  const [Alert, setAlert] = useState(false)\n\n\n  const hendlerSubmit = (e) => {\n    e.preventDefault()    \n    e.target.reset();\n    \n    const curItem = DashboardName;\n    const arr = servRes;\n    const index = arr.findIndex(el => el.title === curItem.title); \n    index === -1 \n    ?\n    fetch(`${API_URL}/api`, {\n      method: 'post',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify(DashboardName) \n    })\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      setServRes( data );\n    })\n    :\n    setAlert( true );\n  }\n\n  const itemSubmit = (e) => {\n    e.preventDefault()\n    e.target.reset();\n\n    fetch(`${API_URL}/api/sub`, {\n      method: 'post',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify(ItemValue)\n     })\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      setServRes( data );\n    })\n  }\n\n  const Delate = (el) => {\n    fetch(`${API_URL}/api/` + el.id, {\n      method: 'delete'\n    })\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      setServRes( data );\n    })\n  }\n\n  const delateSub = (el, board) => {\n    //('http://localhost:5000/api/sub/' + items + '/' + el.subTitle,\n    fetch(`${API_URL}/api/sub/` + board.title + '/' + el.subTitle, {\n      method: 'delete'\n    })\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      setServRes( data );\n    })\n  }\n\n  const closeModal = () => {\n    setAlert( false );\n  }\n\nconst nowDate = new Date()\n\nconst [currBoard, setCurrBoard] = useState(null)\nconst [currItem, setCurrItem] = useState(null)\n\nfunction DragOver(e){\n    e.preventDefault();\n    if(e.target.className === 'Items') {\n        e.target.style.boxShadow = '0 4px 3px gray'\n    }\n}\nfunction DragLeave(e) {\n    e.target.style.boxShadow = 'none'\n}\nfunction DragStart(e, item, board) {\n  setCurrBoard(board)\n  setCurrItem(item)\n}\nfunction DragEnd(e) {\n    e.target.style.boxShadow = 'none'\n}\nfunction Drop(item, board ) {\n    const currIndex = currBoard && currBoard.results.indexOf(currItem)\n    currBoard && currBoard.results.splice(currIndex, 1)\n    const dropIdex = board && board.results.indexOf(item)\n    board && board.results.splice(dropIdex + 1, 0, currItem) \n\n    setServRes( servRes.map(b => {\n        if( b.id === board && board.id) {\n          return board\n        }\n        if( b.id === currBoard && currBoard.id) {\n          return currBoard\n        }\n        return b\n    }) )\n\n    fetch(`${API_URL}/api`, {\n      method: 'PUT',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify(servRes) \n    })\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      setServRes( data );\n    })\n}\n\n  return (\n    <div className=\"App\">\n      <header className='header'>\n        <h1>Trello Dashboard</h1>\n        <form onSubmit={(e)=> hendlerSubmit(e) }>\n          <label htmlFor=\"Dashboard-input\">Create name:</label>\n          <input \n            id='Dashboard-input'\n            placeholder=\"Dashboard name\"\n            required\n            autoComplete='off'\n            type=\"text\"\n            name=\"Dashboard\" \n            onChange={(e)=> setDashboardName({'id': Math.random(), 'title': e.target.value, 'results':[] }) }\n          />\n          <button className='btn'>Create Dashboard</button>\n        </form>\n      </header>\n\n    {Alert \n    ?\n    <div className=\"modal\">\n      Dashboard with this Name exists - enter other Name \n      <button className='btn' onClick={ closeModal }>X</button>\n    </div>\n    :\n    null\n    }\n\n    <div className=\"dashboard-wrapper\">\n    {servRes.length < 1\n      ?\n      <div className=\"Create-a-dashboard\">\n        <div className=\"isFetching\"></div>\n        <h3>dashboard list is empty</h3>\n      </div>\n      :\n      <div className=\"dashboard-list\">\n        { servRes && servRes.map((board, i) => {\n          return(\n            <div className=\"dashboard-item\" key={i}>\n\n              <div className=\"dashboard-item-head\">\n                <h3 className=\"dashboard-item-head-title\">\n                  {board.title} \n                </h3>\n                <button \n                  className='remove-btn'\n                  onClick={ () => Delate(board) }>X</button>\n              </div>\n\n              <form onSubmit={(e)=> itemSubmit(e) }>\n                <label htmlFor=\"dashboard-item-input\">Item Value name:</label>\n                <input \n                  id='dashboard-item-input'\n                  placeholder=\"Task\"\n                  required\n                  autoComplete='off'\n                  type=\"text\"\n                  onChange={(e)=> setItemValue( {'subTitle':e.target.value, 'board':board.title, 'postDate' : moment()._d} ) }\n                />\n                <button className='btn'>Add task</button>\n              </form>\n                {\n                board && board.results.map( (item, i) => {\n                  return(\n                    <div className=\"Items\" \n                      key={i}\n                      onDragOver={ (e) => DragOver(e, item) }\n                      onDragLeave={ (e) => DragLeave(e) }\n                      onDragStart={ (e) => DragStart(e, item, board) }\n                      onDragEnd={ (e) => DragEnd(e) }\n                      onDrop={ () => Drop( item, board) }\n                      draggable={true}\n                      >\n\n                      <div className=\"Items-title\">\n                          { item && item.subTitle}\n                      </div>\n\n                      <div className=\"Items-botton\">\n                        <div className=\"Items-date\">\n                            { moment( item.postDate && item.postDate).from(moment(nowDate)._d) }   \n                        </div>\n\n                        <button \n                          className='remove-btn'\n                          onClick={ ()=> delateSub(item, board) }> X </button>\n                      </div>\n\n                    </div>\n                  )\n                })\n              }\n            </div>\n          )\n        })}\n      </div>\n\n    }\n    </div>\n\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}